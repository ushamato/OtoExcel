name: Deploy OttoExcel Bot

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set lowercase repository name
        id: repo-name
        run: |
          REPO_NAME_LC=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_LC=$REPO_NAME_LC" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.REPO_LC }}:latest,ghcr.io/${{ env.REPO_LC }}:${{ github.sha }}

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # Proje dizinine git
            mkdir -p ~/ottoexcel
            cd ~/ottoexcel
            
            # docker-compose.yml dosyasını oluştur
            cat > docker-compose.yml << 'EOF'
            services:
              ottoexcel_db:
                image: postgres:15
                container_name: ottoexcel_db
                environment:
                  - POSTGRES_USER=${POSTGRES_USER}
                  - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
                  - POSTGRES_DB=${POSTGRES_DB}
                volumes:
                  - postgres_data:/var/lib/postgresql/data
                restart: always
                healthcheck:
                  test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
                  interval: 5s
                  timeout: 5s
                  retries: 5

              ottoexcel_bot:
                image: ${DOCKER_IMAGE:-ghcr.io/${{ env.REPO_LC }}:latest}
                container_name: ottoexcel_bot
                environment:
                  - BOT_TOKEN=${BOT_TOKEN}
                  - SUPER_ADMIN_ID=${SUPER_ADMIN_ID}
                  - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@ottoexcel_db:5432/${POSTGRES_DB}
                  - POSTGRES_ENCRYPTION_KEY=${POSTGRES_ENCRYPTION_KEY}
                  - NOWPAYMENTS_API_KEY=${NOWPAYMENTS_API_KEY}
                  - NOTIFICATION_BOT_TOKEN=${NOTIFICATION_BOT_TOKEN}
                  - IMGBB_API_KEY=${IMGBB_API_KEY}
                  - IMGBB_UPLOAD_URL=${IMGBB_UPLOAD_URL}
                depends_on:
                  ottoexcel_db:
                    condition: service_healthy
                restart: always

            volumes:
              postgres_data:
            EOF
            
            # .env dosyasını oluştur
            cat > .env << EOL
            BOT_TOKEN=${{ secrets.BOT_TOKEN }}
            SUPER_ADMIN_ID=${{ secrets.SUPER_ADMIN_ID }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_ENCRYPTION_KEY=${{ secrets.POSTGRES_ENCRYPTION_KEY }}
            NOWPAYMENTS_API_KEY=${{ secrets.NOWPAYMENTS_API_KEY }}
            NOTIFICATION_BOT_TOKEN=${{ secrets.NOTIFICATION_BOT_TOKEN }}
            IMGBB_API_KEY=${{ secrets.IMGBB_API_KEY }}
            IMGBB_UPLOAD_URL=${{ secrets.IMGBB_UPLOAD_URL }}
            DOCKER_IMAGE=ghcr.io/${{ env.REPO_LC }}:latest
            EOL
            
            # Uygulamayı yeniden başlat
            docker compose pull
            docker compose down
            docker compose up -d
            
            # Konteyner durumunu göster
            docker compose ps 