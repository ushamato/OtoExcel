name: Deploy OttoExcel Bot

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set lowercase repository name
        id: repo-name
        run: |
          REPO_NAME_LC=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_LC=$REPO_NAME_LC" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.REPO_LC }}:latest,ghcr.io/${{ env.REPO_LC }}:${{ github.sha }}

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # Docker kurulumunu kontrol et
            if ! command -v docker &> /dev/null; then
              echo "Docker yüklü değil, yükleniyor..."
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
            else
              echo "Docker zaten yüklü: $(docker --version)"
            fi
            
            # Docker Compose kurulumu
            # Önce docker compose komutu ile kontrol et (yeni sözdizimi)
            if ! docker compose version &> /dev/null; then
              # Sonra docker-compose komutu ile kontrol et (eski sözdizimi)
              if ! command -v docker-compose &> /dev/null; then
                echo "Docker Compose yüklü değil, yükleniyor..."
                # Docker Compose binary'sini doğrudan indir
                sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
                sudo ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose
                echo "Docker Compose yüklendi: $(docker-compose --version)"
              fi
            else
              echo "Docker Compose zaten yüklü: $(docker compose version)"
            fi
            
            # Proje dizinine git
            mkdir -p ~/ottoexcel
            cd ~/ottoexcel
            
            # docker-compose.yml dosyasını indirin (eğer yoksa)
            if [ ! -f docker-compose.yml ]; then
              curl -o docker-compose.yml https://raw.githubusercontent.com/${{ github.repository }}/main/docker-compose.yml
            fi
            
            # .env dosyasını oluştur
            cat > .env << EOL
            BOT_TOKEN=${{ secrets.BOT_TOKEN }}
            SUPER_ADMIN_ID=${{ secrets.SUPER_ADMIN_ID }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_ENCRYPTION_KEY=${{ secrets.POSTGRES_ENCRYPTION_KEY }}
            NOWPAYMENTS_API_KEY=${{ secrets.NOWPAYMENTS_API_KEY }}
            NOTIFICATION_BOT_TOKEN=${{ secrets.NOTIFICATION_BOT_TOKEN }}
            DOCKER_IMAGE=ghcr.io/${{ env.REPO_LC }}:latest
            EOL
            
            # Uygulamayı yeniden başlat (önce yeni sözdizimi, sonra eski sözdizimi)
            if docker compose version &> /dev/null; then
              docker compose pull
              docker compose down
              docker compose up -d
              docker compose ps
            else
              docker-compose pull
              docker-compose down
              docker-compose up -d
              docker-compose ps
            fi 